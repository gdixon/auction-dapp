{
  "metadataVersion": "0.1.0",
  "source": {
    "hash": "0x3b24ef85aa1971f101f9fd9dbacaec82f2138f12d694c0c8489a0874111deb85",
    "language": "ink! 3.0.0-rc2",
    "compiler": "rustc 1.49.0-nightly"
  },
  "contract": {
    "name": "auction",
    "version": "0.1.0",
    "authors": [
      "Graham Dixon <[graham@gdixon.co.uk]>"
    ],
    "description": "Auction contract"
  },
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "name": "item",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 1
            }
          },
          {
            "name": "beneficiary",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          },
          {
            "name": "run_time",
            "type": {
              "displayName": [
                "u64"
              ],
              "type": 5
            }
          }
        ],
        "docs": [
          " Creates a new raffle smart contract initialised with the given beneficiary"
        ],
        "name": [
          "new"
        ],
        "selector": "0xd183512b"
      }
    ],
    "docs": [],
    "events": [
      {
        "args": [],
        "docs": [
          " Auction has been created"
        ],
        "name": "NewAuction"
      },
      {
        "args": [],
        "docs": [
          " The highest bid has increased"
        ],
        "name": "HighestBidIncreased"
      },
      {
        "args": [],
        "docs": [
          " Auction has been ended"
        ],
        "name": "AuctionEnded"
      }
    ],
    "messages": [
      {
        "args": [],
        "docs": [
          " Record bids - only allowing if the auction is still running and the value sent is higher that the highest_bid"
        ],
        "mutates": true,
        "name": [
          "bid"
        ],
        "payable": true,
        "returnType": null,
        "selector": "0x9eaa521c"
      },
      {
        "args": [],
        "docs": [
          " Return funds associated with losing bids to the caller"
        ],
        "mutates": true,
        "name": [
          "return_funds"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x558e0348"
      },
      {
        "args": [],
        "docs": [
          " Draws up to the maximum number of winners (MAX_DRAWS)"
        ],
        "mutates": true,
        "name": [
          "auction_end"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x8d7b8ff9"
      },
      {
        "args": [],
        "docs": [
          " Return the end_time from storage"
        ],
        "mutates": false,
        "name": [
          "get_end"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "u64"
          ],
          "type": 5
        },
        "selector": "0x9094ff74"
      },
      {
        "args": [],
        "docs": [
          " Return the start_time from storage"
        ],
        "mutates": false,
        "name": [
          "get_start"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "u64"
          ],
          "type": 5
        },
        "selector": "0x6052ff7e"
      },
      {
        "args": [],
        "docs": [
          " Return the highest_bid from storage"
        ],
        "mutates": false,
        "name": [
          "get_highest_bid"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "u128"
          ],
          "type": 7
        },
        "selector": "0xa7697c76"
      },
      {
        "args": [],
        "docs": [
          " Return the highest_bidder from storage"
        ],
        "mutates": false,
        "name": [
          "get_highest_bidder"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "AccountId"
          ],
          "type": 2
        },
        "selector": "0xb1f84e6c"
      },
      {
        "args": [],
        "docs": [
          " Return the beneficiery from storage"
        ],
        "mutates": false,
        "name": [
          "get_beneficiary"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "AccountId"
          ],
          "type": 2
        },
        "selector": "0x399397ab"
      },
      {
        "args": [],
        "docs": [
          " Return the item name from storage"
        ],
        "mutates": false,
        "name": [
          "get_item"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "String"
          ],
          "type": 1
        },
        "selector": "0xec815bb7"
      },
      {
        "args": [
          {
            "name": "acc",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          }
        ],
        "docs": [
          " Return the item name from storage"
        ],
        "mutates": false,
        "name": [
          "get_pending"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "u128"
          ],
          "type": 7
        },
        "selector": "0x8bc075ef"
      },
      {
        "args": [],
        "docs": [
          " Return the number of bids made from storage"
        ],
        "mutates": false,
        "name": [
          "get_bids"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "u64"
          ],
          "type": 5
        },
        "selector": "0x9cc8a2c9"
      },
      {
        "args": [],
        "docs": [
          " Return the state of \"ended\" from storage"
        ],
        "mutates": false,
        "name": [
          "get_ended"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "bool"
          ],
          "type": 6
        },
        "selector": "0x6df1837b"
      }
    ]
  },
  "storage": {
    "struct": {
      "fields": [
        {
          "layout": {
            "cell": {
              "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "ty": 1
            }
          },
          "name": "item"
        },
        {
          "layout": {
            "cell": {
              "key": "0x0100000000000000000000000000000000000000000000000000000000000000",
              "ty": 2
            }
          },
          "name": "beneficiary"
        },
        {
          "layout": {
            "cell": {
              "key": "0x0200000000000000000000000000000000000000000000000000000000000000",
              "ty": 5
            }
          },
          "name": "start_time"
        },
        {
          "layout": {
            "cell": {
              "key": "0x0300000000000000000000000000000000000000000000000000000000000000",
              "ty": 5
            }
          },
          "name": "end_time"
        },
        {
          "layout": {
            "cell": {
              "key": "0x0400000000000000000000000000000000000000000000000000000000000000",
              "ty": 6
            }
          },
          "name": "ended"
        },
        {
          "layout": {
            "cell": {
              "key": "0x0500000000000000000000000000000000000000000000000000000000000000",
              "ty": 5
            }
          },
          "name": "bids"
        },
        {
          "layout": {
            "cell": {
              "key": "0x0600000000000000000000000000000000000000000000000000000000000000",
              "ty": 7
            }
          },
          "name": "highest_bid"
        },
        {
          "layout": {
            "cell": {
              "key": "0x0700000000000000000000000000000000000000000000000000000000000000",
              "ty": 2
            }
          },
          "name": "highest_bidder"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "cell": {
                              "key": "0x0800000000000000000000000000000000000000000000000000000000000000",
                              "ty": 8
                            }
                          },
                          "name": "header"
                        },
                        {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "cell": {
                                      "key": "0x0900000000000000000000000000000000000000000000000000000000000000",
                                      "ty": 9
                                    }
                                  },
                                  "name": "len"
                                },
                                {
                                  "layout": {
                                    "array": {
                                      "cellsPerElem": 1,
                                      "layout": {
                                        "cell": {
                                          "key": "0x0900000001000000000000000000000000000000000000000000000000000000",
                                          "ty": 10
                                        }
                                      },
                                      "len": 4294967295,
                                      "offset": "0x0a00000000000000000000000000000000000000000000000000000000000000"
                                    }
                                  },
                                  "name": "elems"
                                }
                              ]
                            }
                          },
                          "name": "entries"
                        }
                      ]
                    }
                  },
                  "name": "keys"
                },
                {
                  "layout": {
                    "hash": {
                      "layout": {
                        "cell": {
                          "key": "0x0a00000001000000000000000000000000000000000000000000000000000000",
                          "ty": 12
                        }
                      },
                      "offset": "0x0900000001000000000000000000000000000000000000000000000000000000",
                      "strategy": {
                        "hasher": "Blake2x256",
                        "postfix": "",
                        "prefix": "0x696e6b20686173686d6170"
                      }
                    }
                  },
                  "name": "values"
                }
              ]
            }
          },
          "name": "pending_returns"
        }
      ]
    }
  },
  "types": [
    {
      "def": {
        "primitive": "str"
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "type": 3
            }
          ]
        }
      },
      "path": [
        "ink_env",
        "types",
        "AccountId"
      ]
    },
    {
      "def": {
        "array": {
          "len": 32,
          "type": 4
        }
      }
    },
    {
      "def": {
        "primitive": "u8"
      }
    },
    {
      "def": {
        "primitive": "u64"
      }
    },
    {
      "def": {
        "primitive": "bool"
      }
    },
    {
      "def": {
        "primitive": "u128"
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "last_vacant",
              "type": 9
            },
            {
              "name": "len",
              "type": 9
            },
            {
              "name": "len_entries",
              "type": 9
            }
          ]
        }
      },
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "Header"
      ]
    },
    {
      "def": {
        "primitive": "u32"
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "fields": [
                {
                  "type": 11
                }
              ],
              "name": "Vacant"
            },
            {
              "fields": [
                {
                  "type": 2
                }
              ],
              "name": "Occupied"
            }
          ]
        }
      },
      "params": [
        2
      ],
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "Entry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "next",
              "type": 9
            },
            {
              "name": "prev",
              "type": 9
            }
          ]
        }
      },
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "VacantEntry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "value",
              "type": 7
            },
            {
              "name": "key_index",
              "type": 9
            }
          ]
        }
      },
      "params": [
        7
      ],
      "path": [
        "ink_storage",
        "collections",
        "hashmap",
        "ValueEntry"
      ]
    }
  ]
}